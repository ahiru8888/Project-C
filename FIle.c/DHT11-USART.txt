#include "stm32f4xx.h"
#include "usart.h"	//PB6-PB7:UART1
#include "delay.h"	//delay_us/delay_ms
#include "string.h"
#include <stdlib.h>
#include <stdio.h>
#include "adc1.h"


uint8_t T_byte1, T_byte2, RH_byte1, RH_byte2, CheckSum ;
unsigned char values[5];
unsigned char state = 0;
char do_am[40] = "Do am:";
char nhiet_do[50] = "Nhiet do:";

void output_GPIOD(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE); 

  /* Configure PD12, PD13, PD14 and PD15 in output pushpull mode */
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOD, &GPIO_InitStructure);
}

void input_GPIOD(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE); 

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 ; 
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;  
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
	GPIO_Init(GPIOD, &GPIO_InitStructure); 	
}
void start_signal(void)
{
	output_GPIOD();
	GPIO_SetBits(GPIOD,GPIO_Pin_0);
	GPIO_ResetBits(GPIOD,GPIO_Pin_0);
	delay_ms(18);
	GPIO_SetBits(GPIOD,GPIO_Pin_0);
	delay_us(26);
	input_GPIOD();	
}

uint8_t Read_Byte()
{
	uint8_t i, data = 0;
	for(i=0;i<8;i++)
	{
		data <<= 1;
		while(!GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0));
		delay_us(30);
		if(GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0))
		{
			data |= 1;
		}
		while(GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0));
	}
	return data;
}

unsigned char get_data()
{
	unsigned char s = 0; 
  unsigned char check_sum = 0;
	start_signal();
	if(GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0))
	{
		return 1;
	}
	delay_us(80);
	if(!GPIO_ReadInputDataBit(GPIOD,GPIO_Pin_0))
	{
		return 2;
	}
	delay_us(80);
	
	for(s = 0; s <= 4; s += 1) 
	{
		values[s] = Read_Byte(); 
	}
	
	output_GPIOD();
	GPIO_SetBits(GPIOD,GPIO_Pin_0);
	
	for(s = 0; s < 4; s += 1) 
   { 
       check_sum += values[s]; 
   } 
    
   if(check_sum != values[4]) 
   { 
      return 3; 
   } 
   else 
   { 
      return 0; 
   } 
}
int main(void)
{
	USARTx_Init(USART1, Pins_PB6PB7, 115200);	//115200
//	Adc_Init();
	delay_init(168);
	
  while(1)
	{
		state = get_data();
		switch(state)
		{
			case 1: {}
			case 2: {printf("No Sensor Found");break;}
			case 3: {printf("CheckSum Error");break;}
			default:
			{
				//printf("Do am la: %d.%d\r\n Nhiet do la: %d.%d\r\n",values[0],values[1],values[2],values[3]);
				printf("%s\r\n %d.%d\r\n%s\r\n %d.%d\r\n",do_am,values[0],values[1],nhiet_do,values[2],values[3]);
			}
		}
		delay_ms(10000); 
	}
}

